//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication8.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ChinookEntities : DbContext
    {
        public ChinookEntities()
            : base("name=ChinookEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Album> Album { get; set; }
        public virtual DbSet<Artist> Artist { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<Genre> Genre { get; set; }
        public virtual DbSet<Invoice> Invoice { get; set; }
        public virtual DbSet<InvoiceLine> InvoiceLine { get; set; }
        public virtual DbSet<MediaType> MediaType { get; set; }
        public virtual DbSet<Playlist> Playlist { get; set; }
        public virtual DbSet<Track> Track { get; set; }
    
        public virtual ObjectResult<InvoiceLine> proced1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InvoiceLine>("proced1");
        }
    
        public virtual ObjectResult<InvoiceLine> proced1(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InvoiceLine>("proced1", mergeOption);
        }
    
        public virtual ObjectResult<query3_Result1> query3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<query3_Result1>("query3");
        }
    
        public virtual ObjectResult<query6_Result> query6(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<query6_Result>("query6", dateParameter);
        }
    
        public virtual ObjectResult<query1_Result> query1(Nullable<int> x, Nullable<System.DateTime> startDate, Nullable<System.DateTime> stopDate)
        {
            var xParameter = x.HasValue ?
                new ObjectParameter("X", x) :
                new ObjectParameter("X", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var stopDateParameter = stopDate.HasValue ?
                new ObjectParameter("StopDate", stopDate) :
                new ObjectParameter("StopDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<query1_Result>("query1", xParameter, startDateParameter, stopDateParameter);
        }
    
        public virtual ObjectResult<query2_Result> query2(Nullable<System.DateTime> startDate, Nullable<System.DateTime> stopDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var stopDateParameter = stopDate.HasValue ?
                new ObjectParameter("StopDate", stopDate) :
                new ObjectParameter("StopDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<query2_Result>("query2", startDateParameter, stopDateParameter);
        }
    
        public virtual ObjectResult<query4_Result> query4(Nullable<System.DateTime> startDate, Nullable<System.DateTime> stopDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var stopDateParameter = stopDate.HasValue ?
                new ObjectParameter("StopDate", stopDate) :
                new ObjectParameter("StopDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<query4_Result>("query4", startDateParameter, stopDateParameter);
        }
    
        public virtual ObjectResult<query5_Result> query5(Nullable<System.DateTime> startDate, Nullable<System.DateTime> stopDate, string customerFirst, string customerLast, string employeeFirst, string employeeLast)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var stopDateParameter = stopDate.HasValue ?
                new ObjectParameter("StopDate", stopDate) :
                new ObjectParameter("StopDate", typeof(System.DateTime));
    
            var customerFirstParameter = customerFirst != null ?
                new ObjectParameter("customerFirst", customerFirst) :
                new ObjectParameter("customerFirst", typeof(string));
    
            var customerLastParameter = customerLast != null ?
                new ObjectParameter("CustomerLast", customerLast) :
                new ObjectParameter("CustomerLast", typeof(string));
    
            var employeeFirstParameter = employeeFirst != null ?
                new ObjectParameter("employeeFirst", employeeFirst) :
                new ObjectParameter("employeeFirst", typeof(string));
    
            var employeeLastParameter = employeeLast != null ?
                new ObjectParameter("EmployeeLast", employeeLast) :
                new ObjectParameter("EmployeeLast", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<query5_Result>("query5", startDateParameter, stopDateParameter, customerFirstParameter, customerLastParameter, employeeFirstParameter, employeeLastParameter);
        }
    }
}
